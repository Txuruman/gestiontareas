<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true" xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util">
    <description><![CDATA[
		Main entry point for spring configuration
	]]></description>


    <!-- context -->
    <context:component-scan base-package="es.securitasdirect.senales">
        <!-- exclude web beans as they live in the web application context -->
        <!-- Note: this regexp does not work if you try to escape the '.' -->
        <context:exclude-filter type="regex" expression="es.securitasdirect.senales.web.*"/>
    </context:component-scan>
    <!--<context:property-placeholder location="classpath*:database.properties,classpath*:hibernate.properties,classpath*:app-version.properties"/>-->

    <!--
    <context:property-placeholder location="classpath*:database.properties,classpath*:hibernate.properties,classpath*:app-version.properties"/>
    -->


    <!-- Configuration of the File Reader and Writer of for the error messages -->
    <bean id="errorFileReader" class="es.securitasdirect.senales.reader.FileReader"/>


    <!-- Task scheduler -->
    <task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>
    <task:executor id="myExecutor" pool-size="1"/>
    <task:scheduler id="myScheduler" pool-size="1"/>

    <!-- Planning of the reprocesing of error messages from the directory. Fixed -->
    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="errorFileReader" method="processErrorMessages" fixed-delay="5000"/>
    </task:scheduled-tasks>

    <!-- Service to read and save message files on errors -->
    <bean id="fileService" class="es.securitasdirect.senales.support.FileService">
        <property name="fileTail" value=".xml"/>
        <property name="fileHeader" value="message"/>
        <property name="folderPath" value="/tmp/teamvision/gestionsenales/errorSD/"/>
    </bean>


    <!--
     La forma en la que se implementa el control de señales permitidas mediante parámetros en el fichero de configuración de CCL (CCLconfig.properties) es la siguiente:
        1)	Un parámetro ALLOWED_QSIGNALS que indicará una lista de los códigos de señal permitidos, separados por “;”.
        2)	Para cada señal permitida:
        2.1)  Un parámetro con el identificador para luego invocar el método de obtención de  calling list y campaña (XXX_SIGNAL_CL_ID). <EVENT id="UCB"> del XML
        2.2)  Otro parámetro para indicar el status permitido para la señal  (XXX_SIGNAL_STATUS).Donde XXX es el código de señal. <type>2</type> del XML.
    -->
    <util:map id="allowedQSignals" map-class="java.util.HashMap" key-type="java.lang.String" value-type="es.securitasdirect.senales.model.SignalMetadata">
        <entry key="ILS">
            <bean class="es.securitasdirect.senales.model.SignalMetadata">
                <property name="clId" value="DIY_TAREAS_BTN"/>
                <property name="allowedStatus">
                    <list value-type="java.lang.Integer">
                        <value>1</value>
                        <value>2</value>
                    </list>
                </property>
            </bean>
        </entry>
        <entry key="UCB">
            <bean class="es.securitasdirect.senales.model.SignalMetadata">
                <property name="clId" value="DIY_TAREAS_BTN"/>
                <property name="allowedStatus">
                    <list value-type="java.lang.Integer">
                        <value>1</value>
                        <value>2</value>
                    </list>
                </property>
            </bean>
        </entry>
    </util:map>


    <!-- Example of definition of same message for different languages-->
    <bean id="anotherENG" class="java.lang.String">
        <constructor-arg value="Not specified messsage"/>
    </bean>
    <bean id="outOfWorkingHoursENG" class="java.lang.String">
        <constructor-arg value="Received message out of working hours, it will be pending to process"/>
    </bean>

    <!-- Definición de los ensajes SMS para cada idioma -->
    <util:map id="smsLocation" map-class="java.util.HashMap" key-type="java.lang.String" value-type="es.securitasdirect.senales.model.SmsMessageLocation">
        <!-- Default language location values -->
        <entry key="DEF">
            <bean class="es.securitasdirect.senales.model.SmsMessageLocation">
                <property name="another" value="Not specified message"/>
                <property name="outOfWorkingHours" value="Received message out of working hours, it will be pending to process"/>
            </bean>
        </entry>

        <entry key="ESP">
            <bean class="es.securitasdirect.senales.model.SmsMessageLocation">
                <property name="another" value="Mensaje no especificado"/>
                <property name="outOfWorkingHours" value="Mensaje recibido fuera del horario de trabajo, quedará pendiente de procesar"/>
            </bean>
        </entry>
        <entry key="ENG">
            <bean class="es.securitasdirect.senales.model.SmsMessageLocation">
                <property name="another" value="Not specified messsage"/>
                <property name="outOfWorkingHours" value="Received message out of working hours, it will be pending to process"/>
            </bean>
        </entry>
        <!-- Example of definition of same message for different languages or countries-->
        <entry key="US_ENG">
            <bean class="es.securitasdirect.senales.model.SmsMessageLocation">
                <property name="another" value="anotherENG"/>
                <property name="outOfWorkingHours" ref="outOfWorkingHoursENG"/>
            </bean>
        </entry>
        <entry key="GB_ENG">
            <bean class="es.securitasdirect.senales.model.SmsMessageLocation">
                <property name="another" ref="anotherENG"/>
                <property name="outOfWorkingHours" ref="outOfWorkingHoursENG"/>
            </bean>
        </entry>
    </util:map>

    <!-- Prefijo telefonico de los distintos paises para utiliza anteponiéndolo al número de telefono -->
    <util:map id="countryPhoneCodes" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.String">
        <entry key="ESP">
            <bean class="java.lang.String">
                <constructor-arg value="+34"/>
            </bean>
        </entry>
        <entry key="FRANCE">
            <bean class="java.lang.String">
                <constructor-arg value="+33"/>
            </bean>
        </entry>
    </util:map>


    <!-- Work hours definitions, when outside the work hour the SMS will be sent -->

    <!-- Eight o'clok in the morning -->
    <bean id="startWorkHour" class="java.lang.Integer">
        <constructor-arg value="8"/>
    </bean>
    <bean id="startWorkMinute" class="java.lang.Integer">
        <constructor-arg value="0"/>
    </bean>
    <!-- Six thirty pm -->
    <bean id="endWorkHour" class="java.lang.Integer">
        <constructor-arg value="18"/>
    </bean>
    <bean id="endWorkMinute" class="java.lang.Integer">
        <constructor-arg value="30"/>
    </bean>

    <!-- Days to discard messages that had been delayed in the process. Any message older than this will not be processed -->
    <bean id="daysToDiscardOldMessages" class="java.lang.Integer">
        <constructor-arg value="4"/>
    </bean>


    <!-- Constantes para la llamada a insertCallingListContact para crear la tarea , WS30 Diseño Técnico Tareas -->

    <!-- ccIdentifier=grupo del agente (ej.”ATC_SPN”)  recibido del IWS en el parámetro bp_desktopDepartment -->
    <bean id="ccIdentifier" class="java.lang.String">
        <constructor-arg value="ATC_SPN"/>
    </bean>
    <!--	applicationUser=”Tareas” -->
    <bean id="applicationUser" class="java.lang.String">
        <constructor-arg value="Tareas"/>
    </bean>
    <!-- 	ccUserId=agente  recibido en parámetro bp_agent  -->
    <bean id="ccUserId" class="java.lang.String">
        <constructor-arg value="M0OOS"/>
    </bean>
    <!-- 	callingList = “CL_TAREAS_DIY “ calling list única para este tipo de tareas -->
    <bean id="callingList" class="java.lang.String">
        <constructor-arg value="CL_TAREAS_DIY"/>
    </bean>
    <!--  	campaign = “C_TAREAS_DIY “ campaña única para este tipo de tareas -->
    <bean id="campaign" class="java.lang.String">
        <constructor-arg value="C_TAREAS_DIY"/>
    </bean>
    <!--   country=SPAIN  recibido del IWS en el parámetro bp_desktopDepartment -->
    <bean id="country" class="java.lang.String">
        <constructor-arg value="SPAIN"/>
    </bean>
    <!-- Account para el parametro account del envío del SMS -->
    <bean id="smsAccount" class="java.lang.String">
        <constructor-arg value="PC_SMS_ATC"/>
    </bean>
    <!-- Número de telefono para el envío de SMS para pruebas, sobreescribirá el telefono del cliente.
     En producción dejarlo en blanco.-->
    <bean id="smsTestPhone" class="java.lang.String">
        <constructor-arg value="+34696252991"/>
    </bean>


    <!-- Servicio de estatus de la aplicación. Necesario para injectar todos los JMS Reader configurados. -->
    <bean id="happyService" class="es.securitasdirect.senales.service.HappyService">
        <property name="monitoredJmsReaders">
            <!-- Injectar todos los JMS Reader que se quiera que se muestren por el Happy Service -->
            <util:list value-type="es.securitasdirect.senales.reader.JMSReader">
                <ref bean="jmsReaderPozuelo"/>
            </util:list>
        </property>
    </bean>


</beans>
